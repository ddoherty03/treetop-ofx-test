# -*- mode: ruby -*-
# frozen_string_literal: true

# Treetop generates a parser from a grammar.  This file defines the grammar of
# an SGML tree as used by OFX.

# Github: https://github.com/nathansobo/treetop

# Also, a nice tutorial here:
# http://thingsaaronmade.com/blog/a-quick-intro-to-writing-a-parser-using-treetop.html

grammar OfxGrammar do
  # The root of a parsed OFX response will be a single node, an Aggregate,
  # with a tag of '<OFX>' and several children.
  rule aggregate do
    spc tag spc children spc
    close_tag &{ |s| s[1].tag_val == s[5].tag_val }
    spc
    <Aggregate>
  end

  # Each Aggregate will have a Children node that will consist of zero or
  # more Aggregates and zero or more Fields.
  rule children do
    child (spc child)*
    <Children>
  end

  rule child do
    (aggregate / field)
  end

  # A Field node will have a Tag node and a Value node.
  rule field do
    # 0   1    2      3
    tag spc value? spc
    # In OFX version 1, the closing tag is optional; in version 2 it is
    # mandatory.  The predicate ensures that this rule matches only if the
    # closing tag is either blank or matches the opening tag
    #   4
    close_tag &{ |s| s[0].tag_val == s[4].tag_val }
    <Field>
  end

  # '
  rule tag do
    '<' spc [.A-Z0-9]+ spc '>'
    <Tag>
  end

  rule close_tag do
    '</' spc [.A-Z0-9]+ spc '>'
    <CloseTag>
  end

  rule value do
    [^<>]+
    <Value>
  end

  rule spc do
    [\s]*
  end
end
